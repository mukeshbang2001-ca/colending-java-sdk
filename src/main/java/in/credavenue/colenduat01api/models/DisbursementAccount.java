/*
 * KrazybeeLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package in.credavenue.colenduat01api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DisbursementAccount type.
 */
public class DisbursementAccount {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String accountNo;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String ifscCode;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String accountType;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String accountName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String entityType;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String bankName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String bankBranchName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double amount;

    /**
     * Default constructor.
     */
    public DisbursementAccount() {
    }

    /**
     * Initialization constructor.
     * @param  accountNo  String value for accountNo.
     * @param  ifscCode  String value for ifscCode.
     * @param  accountType  String value for accountType.
     * @param  accountName  String value for accountName.
     * @param  entityType  String value for entityType.
     * @param  bankName  String value for bankName.
     * @param  bankBranchName  String value for bankBranchName.
     * @param  amount  Double value for amount.
     */
    public DisbursementAccount(
            String accountNo,
            String ifscCode,
            String accountType,
            String accountName,
            String entityType,
            String bankName,
            String bankBranchName,
            Double amount) {
        this.accountNo = accountNo;
        this.ifscCode = ifscCode;
        this.accountType = accountType;
        this.accountName = accountName;
        this.entityType = entityType;
        this.bankName = bankName;
        this.bankBranchName = bankBranchName;
        this.amount = amount;
    }

    /**
     * Getter for AccountNo.
     * Account number of the bank where disbursement needs to be done
     * @return Returns the String
     */
    @JsonGetter("account_no")
    public String getAccountNo() {
        return accountNo;
    }

    /**
     * Setter for AccountNo.
     * Account number of the bank where disbursement needs to be done
     * @param accountNo Value for String
     */
    @JsonSetter("account_no")
    public void setAccountNo(String accountNo) {
        this.accountNo = accountNo;
    }

    /**
     * Getter for IfscCode.
     * Bank IFSC where disbursement needs to be done
     * @return Returns the String
     */
    @JsonGetter("ifsc_code")
    public String getIfscCode() {
        return ifscCode;
    }

    /**
     * Setter for IfscCode.
     * Bank IFSC where disbursement needs to be done
     * @param ifscCode Value for String
     */
    @JsonSetter("ifsc_code")
    public void setIfscCode(String ifscCode) {
        this.ifscCode = ifscCode;
    }

    /**
     * Getter for AccountType.
     * @return Returns the String
     */
    @JsonGetter("account_type")
    public String getAccountType() {
        return accountType;
    }

    /**
     * Setter for AccountType.
     * @param accountType Value for String
     */
    @JsonSetter("account_type")
    public void setAccountType(String accountType) {
        this.accountType = accountType;
    }

    /**
     * Getter for AccountName.
     * Bank account name where disbursement needs to be done
     * @return Returns the String
     */
    @JsonGetter("account_name")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Bank account name where disbursement needs to be done
     * @param accountName Value for String
     */
    @JsonSetter("account_name")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for EntityType.
     * @return Returns the String
     */
    @JsonGetter("entity_type")
    public String getEntityType() {
        return entityType;
    }

    /**
     * Setter for EntityType.
     * @param entityType Value for String
     */
    @JsonSetter("entity_type")
    public void setEntityType(String entityType) {
        this.entityType = entityType;
    }

    /**
     * Getter for BankName.
     * Name of the bank where disbursement needs to be done
     * @return Returns the String
     */
    @JsonGetter("bank_name")
    public String getBankName() {
        return bankName;
    }

    /**
     * Setter for BankName.
     * Name of the bank where disbursement needs to be done
     * @param bankName Value for String
     */
    @JsonSetter("bank_name")
    public void setBankName(String bankName) {
        this.bankName = bankName;
    }

    /**
     * Getter for BankBranchName.
     * @return Returns the String
     */
    @JsonGetter("bank_branch_name")
    public String getBankBranchName() {
        return bankBranchName;
    }

    /**
     * Setter for BankBranchName.
     * @param bankBranchName Value for String
     */
    @JsonSetter("bank_branch_name")
    public void setBankBranchName(String bankBranchName) {
        this.bankBranchName = bankBranchName;
    }

    /**
     * Getter for Amount.
     * Amount to be transferred to particular Vendor/Borrower
     * @return Returns the Double
     */
    @JsonGetter("amount")
    public Double getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Amount to be transferred to particular Vendor/Borrower
     * @param amount Value for Double
     */
    @JsonSetter("amount")
    public void setAmount(Double amount) {
        this.amount = amount;
    }

    /**
     * Converts this DisbursementAccount into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DisbursementAccount [" + "accountNo=" + accountNo + ", ifscCode=" + ifscCode
                + ", accountType=" + accountType + ", accountName=" + accountName + ", entityType="
                + entityType + ", bankName=" + bankName + ", bankBranchName=" + bankBranchName
                + ", amount=" + amount + "]";
    }

    /**
     * Builds a new {@link DisbursementAccount.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DisbursementAccount.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountNo(getAccountNo())
                .ifscCode(getIfscCode())
                .accountType(getAccountType())
                .accountName(getAccountName())
                .entityType(getEntityType())
                .bankName(getBankName())
                .bankBranchName(getBankBranchName())
                .amount(getAmount());
        return builder;
    }

    /**
     * Class to build instances of {@link DisbursementAccount}.
     */
    public static class Builder {
        private String accountNo;
        private String ifscCode;
        private String accountType;
        private String accountName;
        private String entityType;
        private String bankName;
        private String bankBranchName;
        private Double amount;



        /**
         * Setter for accountNo.
         * @param  accountNo  String value for accountNo.
         * @return Builder
         */
        public Builder accountNo(String accountNo) {
            this.accountNo = accountNo;
            return this;
        }

        /**
         * Setter for ifscCode.
         * @param  ifscCode  String value for ifscCode.
         * @return Builder
         */
        public Builder ifscCode(String ifscCode) {
            this.ifscCode = ifscCode;
            return this;
        }

        /**
         * Setter for accountType.
         * @param  accountType  String value for accountType.
         * @return Builder
         */
        public Builder accountType(String accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for entityType.
         * @param  entityType  String value for entityType.
         * @return Builder
         */
        public Builder entityType(String entityType) {
            this.entityType = entityType;
            return this;
        }

        /**
         * Setter for bankName.
         * @param  bankName  String value for bankName.
         * @return Builder
         */
        public Builder bankName(String bankName) {
            this.bankName = bankName;
            return this;
        }

        /**
         * Setter for bankBranchName.
         * @param  bankBranchName  String value for bankBranchName.
         * @return Builder
         */
        public Builder bankBranchName(String bankBranchName) {
            this.bankBranchName = bankBranchName;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Double value for amount.
         * @return Builder
         */
        public Builder amount(Double amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Builds a new {@link DisbursementAccount} object using the set fields.
         * @return {@link DisbursementAccount}
         */
        public DisbursementAccount build() {
            return new DisbursementAccount(accountNo, ifscCode, accountType, accountName,
                    entityType, bankName, bankBranchName, amount);
        }
    }
}
