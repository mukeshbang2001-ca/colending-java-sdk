/*
 * KrazybeeLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package in.credavenue.colenduat01api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for GetLoan200 type.
 */
public class GetLoan200 {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String clientLoanId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer productId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double principalAmount;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double interestRate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer tenure;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String tenureFrequency;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer noOfRepayments;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String status;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double principalOutstanding;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String rejectReason;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<Applicant> applicants;

    /**
     * Default constructor.
     */
    public GetLoan200() {
    }

    /**
     * Initialization constructor.
     * @param  clientLoanId  String value for clientLoanId.
     * @param  productId  Integer value for productId.
     * @param  principalAmount  Double value for principalAmount.
     * @param  interestRate  Double value for interestRate.
     * @param  tenure  Integer value for tenure.
     * @param  tenureFrequency  String value for tenureFrequency.
     * @param  noOfRepayments  Integer value for noOfRepayments.
     * @param  status  String value for status.
     * @param  principalOutstanding  Double value for principalOutstanding.
     * @param  rejectReason  String value for rejectReason.
     * @param  applicants  List of Applicant value for applicants.
     */
    public GetLoan200(
            String clientLoanId,
            Integer productId,
            Double principalAmount,
            Double interestRate,
            Integer tenure,
            String tenureFrequency,
            Integer noOfRepayments,
            String status,
            Double principalOutstanding,
            String rejectReason,
            List<Applicant> applicants) {
        this.clientLoanId = clientLoanId;
        this.productId = productId;
        this.principalAmount = principalAmount;
        this.interestRate = interestRate;
        this.tenure = tenure;
        this.tenureFrequency = tenureFrequency;
        this.noOfRepayments = noOfRepayments;
        this.status = status;
        this.principalOutstanding = principalOutstanding;
        this.rejectReason = rejectReason;
        this.applicants = applicants;
    }

    /**
     * Getter for ClientLoanId.
     * Unique identifier for the loan
     * @return Returns the String
     */
    @JsonGetter("client_loan_id")
    public String getClientLoanId() {
        return clientLoanId;
    }

    /**
     * Setter for ClientLoanId.
     * Unique identifier for the loan
     * @param clientLoanId Value for String
     */
    @JsonSetter("client_loan_id")
    public void setClientLoanId(String clientLoanId) {
        this.clientLoanId = clientLoanId;
    }

    /**
     * Getter for ProductId.
     * Product ID
     * @return Returns the Integer
     */
    @JsonGetter("product_id")
    public Integer getProductId() {
        return productId;
    }

    /**
     * Setter for ProductId.
     * Product ID
     * @param productId Value for Integer
     */
    @JsonSetter("product_id")
    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    /**
     * Getter for PrincipalAmount.
     * Principal amount for the loan
     * @return Returns the Double
     */
    @JsonGetter("principal_amount")
    public Double getPrincipalAmount() {
        return principalAmount;
    }

    /**
     * Setter for PrincipalAmount.
     * Principal amount for the loan
     * @param principalAmount Value for Double
     */
    @JsonSetter("principal_amount")
    public void setPrincipalAmount(Double principalAmount) {
        this.principalAmount = principalAmount;
    }

    /**
     * Getter for InterestRate.
     * Interest rate in percentage
     * @return Returns the Double
     */
    @JsonGetter("interest_rate")
    public Double getInterestRate() {
        return interestRate;
    }

    /**
     * Setter for InterestRate.
     * Interest rate in percentage
     * @param interestRate Value for Double
     */
    @JsonSetter("interest_rate")
    public void setInterestRate(Double interestRate) {
        this.interestRate = interestRate;
    }

    /**
     * Getter for Tenure.
     * Tenure of the loan
     * @return Returns the Integer
     */
    @JsonGetter("tenure")
    public Integer getTenure() {
        return tenure;
    }

    /**
     * Setter for Tenure.
     * Tenure of the loan
     * @param tenure Value for Integer
     */
    @JsonSetter("tenure")
    public void setTenure(Integer tenure) {
        this.tenure = tenure;
    }

    /**
     * Getter for TenureFrequency.
     * Tenure Frequency
     * @return Returns the String
     */
    @JsonGetter("tenure_frequency")
    public String getTenureFrequency() {
        return tenureFrequency;
    }

    /**
     * Setter for TenureFrequency.
     * Tenure Frequency
     * @param tenureFrequency Value for String
     */
    @JsonSetter("tenure_frequency")
    public void setTenureFrequency(String tenureFrequency) {
        this.tenureFrequency = tenureFrequency;
    }

    /**
     * Getter for NoOfRepayments.
     * Number of Repayments
     * @return Returns the Integer
     */
    @JsonGetter("no_of_repayments")
    public Integer getNoOfRepayments() {
        return noOfRepayments;
    }

    /**
     * Setter for NoOfRepayments.
     * Number of Repayments
     * @param noOfRepayments Value for Integer
     */
    @JsonSetter("no_of_repayments")
    public void setNoOfRepayments(Integer noOfRepayments) {
        this.noOfRepayments = noOfRepayments;
    }

    /**
     * Getter for Status.
     * Current status of the loan
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Current status of the loan
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for PrincipalOutstanding.
     * current POS of the loan
     * @return Returns the Double
     */
    @JsonGetter("principal_outstanding")
    public Double getPrincipalOutstanding() {
        return principalOutstanding;
    }

    /**
     * Setter for PrincipalOutstanding.
     * current POS of the loan
     * @param principalOutstanding Value for Double
     */
    @JsonSetter("principal_outstanding")
    public void setPrincipalOutstanding(Double principalOutstanding) {
        this.principalOutstanding = principalOutstanding;
    }

    /**
     * Getter for RejectReason.
     * Reason for rejecting loan
     * @return Returns the String
     */
    @JsonGetter("reject_reason")
    public String getRejectReason() {
        return rejectReason;
    }

    /**
     * Setter for RejectReason.
     * Reason for rejecting loan
     * @param rejectReason Value for String
     */
    @JsonSetter("reject_reason")
    public void setRejectReason(String rejectReason) {
        this.rejectReason = rejectReason;
    }

    /**
     * Getter for Applicants.
     * Array of applicant details
     * @return Returns the List of Applicant
     */
    @JsonGetter("applicants")
    public List<Applicant> getApplicants() {
        return applicants;
    }

    /**
     * Setter for Applicants.
     * Array of applicant details
     * @param applicants Value for List of Applicant
     */
    @JsonSetter("applicants")
    public void setApplicants(List<Applicant> applicants) {
        this.applicants = applicants;
    }

    /**
     * Converts this GetLoan200 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetLoan200 [" + "clientLoanId=" + clientLoanId + ", productId=" + productId
                + ", principalAmount=" + principalAmount + ", interestRate=" + interestRate
                + ", tenure=" + tenure + ", tenureFrequency=" + tenureFrequency
                + ", noOfRepayments=" + noOfRepayments + ", status=" + status
                + ", principalOutstanding=" + principalOutstanding + ", rejectReason="
                + rejectReason + ", applicants=" + applicants + "]";
    }

    /**
     * Builds a new {@link GetLoan200.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetLoan200.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .clientLoanId(getClientLoanId())
                .productId(getProductId())
                .principalAmount(getPrincipalAmount())
                .interestRate(getInterestRate())
                .tenure(getTenure())
                .tenureFrequency(getTenureFrequency())
                .noOfRepayments(getNoOfRepayments())
                .status(getStatus())
                .principalOutstanding(getPrincipalOutstanding())
                .rejectReason(getRejectReason())
                .applicants(getApplicants());
        return builder;
    }

    /**
     * Class to build instances of {@link GetLoan200}.
     */
    public static class Builder {
        private String clientLoanId;
        private Integer productId;
        private Double principalAmount;
        private Double interestRate;
        private Integer tenure;
        private String tenureFrequency;
        private Integer noOfRepayments;
        private String status;
        private Double principalOutstanding;
        private String rejectReason;
        private List<Applicant> applicants;



        /**
         * Setter for clientLoanId.
         * @param  clientLoanId  String value for clientLoanId.
         * @return Builder
         */
        public Builder clientLoanId(String clientLoanId) {
            this.clientLoanId = clientLoanId;
            return this;
        }

        /**
         * Setter for productId.
         * @param  productId  Integer value for productId.
         * @return Builder
         */
        public Builder productId(Integer productId) {
            this.productId = productId;
            return this;
        }

        /**
         * Setter for principalAmount.
         * @param  principalAmount  Double value for principalAmount.
         * @return Builder
         */
        public Builder principalAmount(Double principalAmount) {
            this.principalAmount = principalAmount;
            return this;
        }

        /**
         * Setter for interestRate.
         * @param  interestRate  Double value for interestRate.
         * @return Builder
         */
        public Builder interestRate(Double interestRate) {
            this.interestRate = interestRate;
            return this;
        }

        /**
         * Setter for tenure.
         * @param  tenure  Integer value for tenure.
         * @return Builder
         */
        public Builder tenure(Integer tenure) {
            this.tenure = tenure;
            return this;
        }

        /**
         * Setter for tenureFrequency.
         * @param  tenureFrequency  String value for tenureFrequency.
         * @return Builder
         */
        public Builder tenureFrequency(String tenureFrequency) {
            this.tenureFrequency = tenureFrequency;
            return this;
        }

        /**
         * Setter for noOfRepayments.
         * @param  noOfRepayments  Integer value for noOfRepayments.
         * @return Builder
         */
        public Builder noOfRepayments(Integer noOfRepayments) {
            this.noOfRepayments = noOfRepayments;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for principalOutstanding.
         * @param  principalOutstanding  Double value for principalOutstanding.
         * @return Builder
         */
        public Builder principalOutstanding(Double principalOutstanding) {
            this.principalOutstanding = principalOutstanding;
            return this;
        }

        /**
         * Setter for rejectReason.
         * @param  rejectReason  String value for rejectReason.
         * @return Builder
         */
        public Builder rejectReason(String rejectReason) {
            this.rejectReason = rejectReason;
            return this;
        }

        /**
         * Setter for applicants.
         * @param  applicants  List of Applicant value for applicants.
         * @return Builder
         */
        public Builder applicants(List<Applicant> applicants) {
            this.applicants = applicants;
            return this;
        }

        /**
         * Builds a new {@link GetLoan200} object using the set fields.
         * @return {@link GetLoan200}
         */
        public GetLoan200 build() {
            return new GetLoan200(clientLoanId, productId, principalAmount, interestRate, tenure,
                    tenureFrequency, noOfRepayments, status, principalOutstanding, rejectReason,
                    applicants);
        }
    }
}
