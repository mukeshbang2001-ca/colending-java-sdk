/*
 * KrazybeeLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package in.credavenue.colenduat01api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import in.credavenue.colenduat01api.DateTimeHelper;
import java.time.LocalDate;

/**
 * This is a model class for UpdatedR type.
 */
public class UpdatedR {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer installmentNo;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private LocalDate dueDate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double principal;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double interest;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double amount;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double pos;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double otherCharges;

    /**
     * Default constructor.
     */
    public UpdatedR() {
    }

    /**
     * Initialization constructor.
     * @param  installmentNo  Integer value for installmentNo.
     * @param  dueDate  LocalDate value for dueDate.
     * @param  principal  Double value for principal.
     * @param  interest  Double value for interest.
     * @param  amount  Double value for amount.
     * @param  pos  Double value for pos.
     * @param  otherCharges  Double value for otherCharges.
     */
    public UpdatedR(
            Integer installmentNo,
            LocalDate dueDate,
            Double principal,
            Double interest,
            Double amount,
            Double pos,
            Double otherCharges) {
        this.installmentNo = installmentNo;
        this.dueDate = dueDate;
        this.principal = principal;
        this.interest = interest;
        this.amount = amount;
        this.pos = pos;
        this.otherCharges = otherCharges;
    }

    /**
     * Getter for InstallmentNo.
     * @return Returns the Integer
     */
    @JsonGetter("installment_no")
    public Integer getInstallmentNo() {
        return installmentNo;
    }

    /**
     * Setter for InstallmentNo.
     * @param installmentNo Value for Integer
     */
    @JsonSetter("installment_no")
    public void setInstallmentNo(Integer installmentNo) {
        this.installmentNo = installmentNo;
    }

    /**
     * Getter for DueDate.
     * @return Returns the LocalDate
     */
    @JsonGetter("due_date")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getDueDate() {
        return dueDate;
    }

    /**
     * Setter for DueDate.
     * @param dueDate Value for LocalDate
     */
    @JsonSetter("due_date")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
    }

    /**
     * Getter for Principal.
     * @return Returns the Double
     */
    @JsonGetter("principal")
    public Double getPrincipal() {
        return principal;
    }

    /**
     * Setter for Principal.
     * @param principal Value for Double
     */
    @JsonSetter("principal")
    public void setPrincipal(Double principal) {
        this.principal = principal;
    }

    /**
     * Getter for Interest.
     * @return Returns the Double
     */
    @JsonGetter("interest")
    public Double getInterest() {
        return interest;
    }

    /**
     * Setter for Interest.
     * @param interest Value for Double
     */
    @JsonSetter("interest")
    public void setInterest(Double interest) {
        this.interest = interest;
    }

    /**
     * Getter for Amount.
     * @return Returns the Double
     */
    @JsonGetter("amount")
    public Double getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for Double
     */
    @JsonSetter("amount")
    public void setAmount(Double amount) {
        this.amount = amount;
    }

    /**
     * Getter for Pos.
     * @return Returns the Double
     */
    @JsonGetter("pos")
    public Double getPos() {
        return pos;
    }

    /**
     * Setter for Pos.
     * @param pos Value for Double
     */
    @JsonSetter("pos")
    public void setPos(Double pos) {
        this.pos = pos;
    }

    /**
     * Getter for OtherCharges.
     * @return Returns the Double
     */
    @JsonGetter("other_charges")
    public Double getOtherCharges() {
        return otherCharges;
    }

    /**
     * Setter for OtherCharges.
     * @param otherCharges Value for Double
     */
    @JsonSetter("other_charges")
    public void setOtherCharges(Double otherCharges) {
        this.otherCharges = otherCharges;
    }

    /**
     * Converts this UpdatedR into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdatedR [" + "installmentNo=" + installmentNo + ", dueDate=" + dueDate
                + ", principal=" + principal + ", interest=" + interest + ", amount=" + amount
                + ", pos=" + pos + ", otherCharges=" + otherCharges + "]";
    }

    /**
     * Builds a new {@link UpdatedR.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdatedR.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .installmentNo(getInstallmentNo())
                .dueDate(getDueDate())
                .principal(getPrincipal())
                .interest(getInterest())
                .amount(getAmount())
                .pos(getPos())
                .otherCharges(getOtherCharges());
        return builder;
    }

    /**
     * Class to build instances of {@link UpdatedR}.
     */
    public static class Builder {
        private Integer installmentNo;
        private LocalDate dueDate;
        private Double principal;
        private Double interest;
        private Double amount;
        private Double pos;
        private Double otherCharges;



        /**
         * Setter for installmentNo.
         * @param  installmentNo  Integer value for installmentNo.
         * @return Builder
         */
        public Builder installmentNo(Integer installmentNo) {
            this.installmentNo = installmentNo;
            return this;
        }

        /**
         * Setter for dueDate.
         * @param  dueDate  LocalDate value for dueDate.
         * @return Builder
         */
        public Builder dueDate(LocalDate dueDate) {
            this.dueDate = dueDate;
            return this;
        }

        /**
         * Setter for principal.
         * @param  principal  Double value for principal.
         * @return Builder
         */
        public Builder principal(Double principal) {
            this.principal = principal;
            return this;
        }

        /**
         * Setter for interest.
         * @param  interest  Double value for interest.
         * @return Builder
         */
        public Builder interest(Double interest) {
            this.interest = interest;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Double value for amount.
         * @return Builder
         */
        public Builder amount(Double amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for pos.
         * @param  pos  Double value for pos.
         * @return Builder
         */
        public Builder pos(Double pos) {
            this.pos = pos;
            return this;
        }

        /**
         * Setter for otherCharges.
         * @param  otherCharges  Double value for otherCharges.
         * @return Builder
         */
        public Builder otherCharges(Double otherCharges) {
            this.otherCharges = otherCharges;
            return this;
        }

        /**
         * Builds a new {@link UpdatedR} object using the set fields.
         * @return {@link UpdatedR}
         */
        public UpdatedR build() {
            return new UpdatedR(installmentNo, dueDate, principal, interest, amount, pos,
                    otherCharges);
        }
    }
}
